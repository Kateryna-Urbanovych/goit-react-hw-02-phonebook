{"version":3,"sources":["components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","type","input","onChange","autoComplete","button","disabled","Component","Filter","ContactItem","onDelete","btnDelete","onClick","ContactList","contacts","onDeleteContact","map","id","contactItem","initialContacts","App","filter","addContact","getContactsNames","includes","toLowerCase","alert","contact","shortid","generate","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","reduce","allNames","push","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6de2f4dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21MZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__15QLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__3kqX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1YiMT\",\"label\":\"ContactForm_label__h-7iM\",\"input\":\"ContactForm_input__3csBL\",\"button\":\"ContactForm_button__1JA6H\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className={s.form}>\n                <label className={s.label}>\n                    Name\n                    <input\n                        type=\"text\"\n                        className={s.input}\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                    />\n                </label>\n                <label className={s.label}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        className={s.input}\n                        name=\"number\"\n                        value={number}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                    />\n                </label>\n                <button\n                    type=\"submit\"\n                    className={s.button}\n                    disabled={name === '' || number === ''}\n                >\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input\n                type=\"text\"\n                className={s.input}\n                value={value}\n                onChange={onChange}\n                autoComplete=\"off\"\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nfunction ContactItem({ name, number, onDelete }) {\n    return (\n        <>\n            {name}: {number}\n            <button type=\"button\" className={s.btnDelete} onClick={onDelete}>\n                Delete\n            </button>\n        </>\n    );\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li key={id} className={s.contactItem}>\n                    <ContactItem\n                        name={name}\n                        number={number}\n                        onDelete={() => {\n                            onDeleteContact(id);\n                        }}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst initialContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n    state = {\n        contacts: initialContacts,\n        filter: '',\n    };\n\n    addContact = ({ name, number }) => {\n        const contactsNames = this.getContactsNames();\n        if (contactsNames.includes(name.toLowerCase())) {\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        const contact = {\n            id: shortid.generate(),\n            name,\n            number,\n        };\n\n        this.setState(({ contacts }) => ({\n            contacts: [contact, ...contacts],\n        }));\n    };\n\n    deleteContact = contactId => {\n        this.setState(({ contacts }) => ({\n            contacts: contacts.filter(contact => contact.id !== contactId),\n        }));\n    };\n\n    changeFilter = event => {\n        this.setState({ filter: event.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    getContactsNames = () => {\n        const { contacts } = this.state;\n        return contacts.reduce((allNames, { name }) => {\n            allNames.push(name.toLowerCase());\n            return allNames;\n        }, []);\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={this.addContact} />\n\n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={this.changeFilter} />\n                <ContactList\n                    contacts={visibleContacts}\n                    onDeleteContact={this.deleteContact}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3hbRS\",\"input\":\"Filter_input__ysF7o\"};"],"sourceRoot":""}